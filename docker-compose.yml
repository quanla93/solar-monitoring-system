version: '3.8'
services:
  # Infrastructure Services
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: solar-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SolarPassword123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - solar-network

  mongodb:
    image: mongo:7.0
    container_name: solar-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=solar
      - MONGO_INITDB_ROOT_PASSWORD=solarpassword
      - MONGO_INITDB_DATABASE=solardb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - solar-network

  redis:
    image: redis:7.2-alpine
    container_name: solar-redis
    command: redis-server --requirepass solarredis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - solar-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: solar-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - solar-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: solar-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"
    networks:
      - solar-network

  # Application Services
  solar-data-processing-service:
    build:
      context: ./solar-data-processing-service
      dockerfile: Dockerfile
    container_name: solar-data-processing-service
    depends_on:
      - sqlserver
      - mongodb
      - redis
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://sqlserver:1433;databaseName=SolarDB;encrypt=false
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=SolarPassword123!
      - SPRING_DATA_MONGODB_URI=mongodb://solar:solarpassword@mongodb:27017/solardb?authSource=admin
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=solarredis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8080:8080"
    networks:
      - solar-network
    restart: unless-stopped

  solar-redis-service:
    build:
      context: ./solar-redis-service
      dockerfile: Dockerfile
    container_name: solar-redis-service
    depends_on:
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PASSWORD=solarredis
    ports:
      - "8081:8081"
    networks:
      - solar-network
    restart: unless-stopped

  solar-kafka-service:
    build:
      context: ./solar-kafka-service
      dockerfile: Dockerfile
    container_name: solar-kafka-service
    depends_on:
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    ports:
      - "8082:8082"
    networks:
      - solar-network
    restart: unless-stopped

volumes:
  sqlserver_data:
  mongodb_data:
  redis_data:

networks:
  solar-network:
    driver: bridge