server:
  port: 8080

spring:
  application:
    name: solar-monitoring-system
  
  datasource:
    url: jdbc:sqlserver://localhost:1433;databaseName=SolarDB;encrypt=false
    username: sa
    password: YourStrong@Passw0rd
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.SQLServerDialect
  
  
    mongodb:
      uri: mongodb://localhost:27017/solar_monitoring
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: solar-monitoring-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

app:
  kafka:
    topic:
      solar-metrics: solar-metrics

resilience4j:
  retry:
    instances:
      kafka-producer:
        max-attempts: 3
        wait-duration: 1s
      redis:
        max-attempts: 3
        wait-duration: 500ms
      mongodb:
        max-attempts: 3
        wait-duration: 1s
      sqlserver:
        max-attempts: 3
        wait-duration: 1s
      data-processing:
        max-attempts: 2
        wait-duration: 2s
  
  circuitbreaker:
    instances:
      data-processing:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s

logging:
  level:
    com.solar.monitoring.system: INFO
    org.springframework.kafka: WARN
    org.springframework.data.mongodb: WARN